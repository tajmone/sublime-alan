// =============================================================================
// Alan DarkFluo v0.2 (2018-04-28)
// =============================================================================
// Copyright (c) Tristano Ajmone, 2018. MIT License.
// -- https://github.com/tajmone/sublime-alan
// -----------------------------------------------------------------------------
{
    "name":   "Alan DarkFluo",
    "author": "Tristano Ajmone",
    "variables":
    {
        "black":        "#090b0c", // Almost black

        "shade2":       "#1b2024", // Even darker
        "shade1":       "#2d353c", // Darker
        "base_hue":     "#3f4a54", // Base color
        "tint1":        "#4b5864", // Less dark
        "tint2":        "#566573", // Even less less dark

        "tint3":        "#b1d0ec", // Midtone (complement 2 of 'base_hue')
        "tint4":        "#d3e4f4", // between 'tint3' and 'white'
        "white":        "#f5f9fd", // Almost white
        "grey":         "#b4b9be", // (matching Grey of 'tint3')
        "grey2":        "#8d949b", // darker grey (blend 2/4 of 'grey' with 'base_hue')

        "blue":         "#5396d1", // Blue
        "green":        "#60cf55", // Green
        "orange":       "#ffa125", // Orange
        "purple":       "#9e5aca", // Purple
        "red":          "#ff2525", // Red
        "yellow":       "#ffff25", // Yellow
    },
    "globals":
    {
        "foreground": "var(tint4)",
        "background": "var(shade1)",

        "caret": "var(white)",
        "invisibles": "color(var(white) alpha(0.35))",
        "line_highlight": "var(tint1)",

        // Accents
        "misspelling": "color(var(red) alpha(0.5))",
        "minimap_border": "var(tint3)",
        "accent": "color(var(red) alpha(0.5))",
        "fold_marker": "var(yellow)",

        // Gutter
        "gutter": "var(shade1)",
        "gutter_foreground": "var(grey2)",

        // Selection
        "selection": "var(tint4)",
        "selection_foreground": "var(black)",
        "selection_border": "var(tint3)",
        "selection_border_width": "1",
        "selection_corner_style": "round",  // round | cut | square
        "selection_corner_radius": "3.5",   // (only for round or cut)
        "inactive_selection": "var(grey2)",
        "inactive_selection_foreground": "var(black)",

        // Find
        "highlight": "var(yellow)",
        "find_highlight": "var(yellow)",
        "find_highlight_foreground": "var(black)",

        // Guides
        "guide": "var(tint2)",
        "active_guide": "color(var(tint3) alpha(0.6))",
        "stack_guide":  "color(var(tint3) alpha(0.35))",

        // Brackets
        "brackets_options": "underline",
        "brackets_foreground": "color(var(white) alpha(0.65))",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "color(var(white) alpha(0.65))",

        // Tags
        "tags_options": "stippled_underline",
        // "tags_foreground": "var(grey)",

        // Shadows
        "shadow": "var(black)",
        "shadow_width": "32", // max: 32
    },
    "rules":
    [
        {
        // =====================================================================
        // COMMENTS
        // =====================================================================
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(grey2)",
            "font_style": "italic"
        },
        // =====================================================================
        // STRINGS
        // =====================================================================
        {
            "name": "DQ String",
            "scope": "string.quoted.double",
            "foreground": "var(black)",
            "background": "var(blue)",
            // "font_style": "bold",
        },
        {
            "name": "DQ String Delimiters",
            "scope": "punctuation.definition.string",
            "foreground": "var(orange)",
            "background": "color(var(grey) a(0.0))",
            "font_style": "",

        },
        {
            "name": "Escape Sequences",
            "scope": "constant.character.escape",
            "foreground": "var(tint3)",
            // "font_style": "bold",
        },
        // =====================================================================
        // IDENTIFIERS
        // =====================================================================
        {
            "name": "String",
            "scope": "string.quoted.single",
            "foreground": "var(green)",
        },
        {
            "name": "String Delimiters",
            "scope": "punctuation.definition.string string.quoted.single",
            "foreground": "var(orange)",
            "background": "color(var(grey) a(0.0))",
            "font_style": "",

        },
        // =====================================================================
        // KEYWORDS
        // =====================================================================
        {
            "name": "Keywords",
            "scope": "keyword",
            "foreground": "var(red)",
            "font_style": "bold"
        },
        {
            "name": "Keywords Control",
            "scope": "keyword.control.conditional",
            "foreground": "var(blue)",
        },

        {
            "name": "Import",
            "scope": "keyword.control.import.include",
            "foreground": "var(purple)",
        },
        // =====================================================================

         {
            "name": "Numbers",
            "scope": "constant.numeric",
            "foreground": "var(white)",
        },


        {
            "name": "Operators",
            "scope": "keyword.operator",
            "foreground": "var(orange)",
        },


        // =====================================================================

        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "var(white)",
            "background": "var(red)",
        },
        {
            "scope": "message.error",
            "foreground": "color(var(red) alpha(0.5))",
        },
        // \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
        //                     Alan Compiler Output Syntax
        // /////////////////////////////////////////////////////////////////////
        // The following colors are used to syntax highlight Alan compiler's
        // output during Build operatrions. The output is captured through the
        // "Alan Compiler Output" syntax definition, which is hidden to the user
        // and used only in build systems. Regardless of which color scheme the
        // users assigns to Alan syntax, the settings for "Alan Compiler Output"
        // will always refer to this color scheme in order to ensure that the
        // compiler output is colored as expected. The scopes for this syntax
        // are rather arbitrarily chosen, as there is no real use for them beside
        // coloring the error messages.
        {
            // Base Text Color
            "name": "Base Color",
            "scope": "text.alancompiler",
            "foreground": "var(grey)",
            "background": "#000000", // transparent
            "font_style": "",
        },
        {
            // Strings
            "name": "Strings",
            "scope": "string.quoted.double.alancompiler",
            "foreground": "var(tint3)",
            "background": "#000000", // transparent
        },
        {
            // String Delimiters
            "name": "String Delimiters",
            "scope": "punctuation.definition.string.begin.alancompiler, punctuation.definition.string.end.alancompiler",
            "foreground": "var(red)",
        },
        // ------------------------------------------------------------------------------
        // Error Line
        // ------------------------------------------------------------------------------
       {
            // Error Line
            "name": "Error Line",
            "scope": "meta.errorline.alancompiler",
            "foreground": "var(tint2)",
            "font_style": "bold",
       },
        {
            // Error Line: Line number
            "name": "Line number",
            "scope": "entity.linenum.alancompiler",
            "foreground": "var(yellow)",
            "font_style": "bold"
        },
        {
            // Error Line: Column number
            "name": "Column number",
            "scope": "entity.column.alancompiler",
            "foreground": "var(blue)",
            "font_style": "bold"
        },
        // ------------------------------------------------------------------------------
        // Error Type
        // ------------------------------------------------------------------------------
       {
            // Error Type
            "name": "Error Type",
            "scope": "text.alancompiler entity.errortype",
            "foreground": "var(red)",
            "font_style": "bold italic"
       },

        // ---------------------------------------------------------------------
        // Error Descriptions
        // ---------------------------------------------------------------------
       {
            // Common Error Description Sytle
            // ==============================
            // Unless a more specific Error Type is caught, this is the base
            // styling that will be used...
            "name": "Error Description",
            "scope": "text.alancompiler entity.errordesc",
            "foreground": "var(white)",
            "background": "var(red)",
            "font_style": "bold"
       },
       {
            // (W) Warning
            "name": "(W) Warning Description",
            "scope": "text.alancompiler entity.errordesc.warning",
            "foreground": "var(red)",
            "background": "var(yellow)",
       },
       {
            // (E) Error Description
            "name": "(E) Error Description",
            "scope": "text.alancompiler entity.error.warning",
            "foreground": "var(black)",
            "background": "var(yellow)",
       },
       {
            // (F) File Error
            "name": "(F) File Error Description",
            "scope": "text.alancompiler entity.errordesc.file_error",
            "foreground": "var(shade1)",
            "background": "var(orange)",
       },
    ]
}